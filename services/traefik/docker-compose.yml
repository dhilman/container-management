version: "3.3"

services:
  traefik:
    image: "traefik:v2.8"
    container_name: "traefik"
    command:
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"

      # Expose dashboard.
      - "--api=true"
      - "--api.dashboard=true"

      # Expose prometheus metrics, this lives on `traefik:8080/metrics`
      - "--metrics"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"

      # Listening on port 80 and redirecting traffic to 443 (i.e. HTTPS)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Listening on port 443
      - "--entrypoints.websecure.address=:443"
      # By default, using production certificate resolver.
      - "--entrypoints.websecure.http.tls.certresolver=prod"

      # Staging let's encrypt server - rate limits are not as strict.
      - "--certificatesresolvers.staging.acme.email=${EMAIL_FOR_CERT:?err}"
      - "--certificatesresolvers.staging.acme.storage=/letsencrypt/acme.staging.json"
      - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.staging.acme.httpchallenge.entrypoint=web"

      # Production let's encrypt server - issues valid certificates.
      - "--certificatesresolvers.prod.acme.email=${EMAIL_FOR_CERT:?err}"
      - "--certificatesresolvers.prod.acme.storage=/letsencrypt/acme.prod.json"
      - "--certificatesresolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.prod.acme.httpchallenge.entrypoint=web"

      # Discover docker services (on the same network).
      - "--providers.docker=true"
      # Exposing a service will require an explicit label: `traefik.enable=true`.
      - "--providers.docker.exposedbydefault=false"
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    volumes:
      # Certificates will be stored here.
      - "~/letsencrypt:/letsencrypt"
      # Mounting docker socket for Traefik to be able to discover services.
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      # Basic Auth for admin users from an environment variable.
      - "traefik.http.middlewares.admin-auth.basicauth.users=${ADMIN_USERS:?err}"
      # Routing rule for the dashboard, i.e.: admin.<domain>
      - "traefik.http.routers.traefik.rule=Host(`admin.${DOMAIN:?err}`)"
      # Entrypoint is websecure (i.e. port 443 with prod certificate resolver)
      - "traefik.http.routers.traefik.entrypoints=websecure"
      # Require Admin Auth for this.
      - "traefik.http.routers.traefik.middlewares=admin-auth"
      - "traefik.http.routers.traefik.service=api@internal"
    networks:
      - web

networks:
  web:
    name: web